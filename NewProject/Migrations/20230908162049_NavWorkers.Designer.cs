// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NewProject.Data;

#nullable disable

namespace NewProject.Migrations
{
    [DbContext(typeof(Data.Data))]
    [Migration("20230908162049_NavWorkers")]
    partial class NavWorkers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NewProject.Data.Entity.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("NewProject.Data.Entity.Manager", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IdChief")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdMainDep")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdSecDep")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassDk")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SecDepId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Secname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdChief");

                    b.HasIndex("IdMainDep");

                    b.HasIndex("IdSecDep");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.HasIndex("SecDepId");

                    b.ToTable("Managers");
                });

            modelBuilder.Entity("NewProject.Data.Entity.Manager", b =>
                {
                    b.HasOne("NewProject.Data.Entity.Manager", "Chef")
                        .WithMany("Workers")
                        .HasForeignKey("IdChief");

                    b.HasOne("NewProject.Data.Entity.Department", "MainDep")
                        .WithMany("MainManagers")
                        .HasForeignKey("IdMainDep")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewProject.Data.Entity.Department", null)
                        .WithMany("SecManagers")
                        .HasForeignKey("IdSecDep");

                    b.HasOne("NewProject.Data.Entity.Department", "SecDep")
                        .WithMany()
                        .HasForeignKey("SecDepId");

                    b.Navigation("Chef");

                    b.Navigation("MainDep");

                    b.Navigation("SecDep");
                });

            modelBuilder.Entity("NewProject.Data.Entity.Department", b =>
                {
                    b.Navigation("MainManagers");

                    b.Navigation("SecManagers");
                });

            modelBuilder.Entity("NewProject.Data.Entity.Manager", b =>
                {
                    b.Navigation("Workers");
                });
#pragma warning restore 612, 618
        }
    }
}
